Android Development for Beginners

================================
Lesson 3A Object Oriented Programming

1. Introduction

2. Defining vs Calling a Method

3. Quiz: Calculate Price Method
Defining methods: https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html
The only required elements of a method declaration are the method's return type, name, a pair of parentheses, (), and a body between braces, {}.

4. Define a Method
Method names should start with a verb.

5. Define Inputs to a Method
Passing Information to a Method or a Constructor: https://docs.oracle.com/javase/tutorial/java/javaOO/arguments.html
Parameters refers to the list of variables in a method declaration. 
Arguments are the actual values that are passed in when the method is invoked. 
When you invoke a method, the arguments used must match the declaration's parameters in type and order.

6. Add or Remove Parameters

7. Output from a Method
Returning a Value from a Method = https://docs.oracle.com/javase/tutorial/java/javaOO/returnvalue.html
Java Language Keywords = https://docs.oracle.com/javase/tutorial/java/nutsandbolts/_keywords.html

8. Use Return Value from Method

9. Define and Call a Method
Java - Basic Operators http://www.tutorialspoint.com/java/java_basic_operators.htm

10. The displayMessage Method

11. Resources
Resources live under the 'res' section
Android App = java(e.g. MainActivity, logic for the app) + resources (images, dimensions, raw media, etc)

12. Resource IDs
R.string.hello	-	java
@string/hello	- 	xml
In java code
	setContentView(R.layout.activity_main);       activity_main.xml exists
    R.id.quantity_text_view);                     android:id="@+id/quantity_text_view" is mentioned in the xml
	TextView orderSummaryTextView = (TextView) findViewById(R.id.order_summary_text_view);    android:id="@+id/order_summary_text_view" appears in the xml

13. From XML to Java

14. What are Java Objects

15. What is a Java Class

16. Quiz: Create an Object
Object Variable = new Object (inputs);       <--- object has capital letter
TextView priceTextView = new TextView(context);
Button submitOrderButton = new Button(context);
CatView sleepCatView = new CatView("Tiger");
or some people suggest the following:
Object Variable = Object.Factory Method Name (inputs);      
MediaPlayer player = MediaPlayer.create(context, R.raw.song);
Toast toastMessage = Toast.makeToast(context, "Hi", duration);

17. Call Methods on Object

18. Practise Calling Object Methods
Display the Message: https://developer.android.com/training/basics/firstapp/starting-activity.html?utm_source=udacity&utm_medium=course&utm_campaign=android_basics#DisplayMessage
TextView: https://developer.android.com/reference/android/widget/TextView.html

[start]
package com.example.android.myapplication;
import android.graphics.Color;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.widget.TextView;

public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        TextView textView = new TextView(this);
        textView.setText("Wow!");
        textView.setTextSize(38);
        textView.setTextColor(Color.DKGRAY);
        setContentView(textView);
        /*setContentView(R.layout.activity_main);*/
    }
}
[end]

19. Inheriting Behaviour
TextView extends View

[start]
public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {   <-- creates initial display
    ....}
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {    <-- creates three vertical dots for settings
    ....}
[end]

20. Find View by Id
Only assign views in xml to what you're going to refer to later.
Views have view Ids that we can refer to later in java code
we have variables that point to these views so we can manipulate these views
In AppCompatActivity class there is a method called findViewById(int id)!! 
findViewById(int id) = Finds a view that was identified by the id attribute from the XML that was processed in onCreate(Bundle). This returns a View object.
https://developer.android.com/reference/android/support/v7/app/AppCompatActivity.html#findViewById(int)
        TextView quantityTextView = (TextView) findViewById(R.id.quantity_text_view);    <-- notice the casting with (TextView) as findViewById returns a View object normally. So can now call TextView methods on result.
        quantityTextView.setText("" + number);
        TextView orderSummaryTextView = (TextView) findViewById(R.id.order_summary_text_view);
        orderSummaryTextView.setText(message);

21. Casting with findViewById

22. Set Data on Views

store before_cookie.jpg and after_cookie.jpg in C:\Users\Michael\AndroidStudioProjects\Cookies\app\src\main\res\drawable\

<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
android:background="#B388FF"
android:orientation="vertical"
tools:context=".MainActivity">

<ImageView
    android:id="@+id/android_cookie_image_view"
    android:layout_width="match_parent"
    android:layout_height="0dp"
    android:layout_weight="1"
    android:scaleType="centerCrop"
    android:src="@drawable/before_cookie" />

<TextView
    android:id="@+id/status_text_view"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:layout_marginLeft="16dp"
    android:layout_marginRight="16dp"
    android:layout_marginTop="16dp"
    android:text="I'm so hungry"
    android:textColor="@android:color/white"
    android:textSize="34sp" />

<Button
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:layout_margin="16dp"
    android:onClick="eatCookie"     <<------
    android:text="EAT COOKIE" />

</LinearLayout>

package com.example.android.cookies;

import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.ImageView;
import android.widget.TextView;


public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }

    /**
     * Called when the cookie should be eaten.
     */
    public void eatCookie(View view) {
        // TODO: Find a reference to the ImageView in the layout. Change the image.
        ImageView imageView = (ImageView) findViewById(R.id.android_cookie_image_view);    <<---
        imageView.setImageResource(R.drawable.after_cookie);                               <<---

        // TODO: Find a reference to the TextView in the layout. Change the text.
        TextView textView = (TextView) findViewById(R.id.status_text_view);	               <<---
        textView.setText("I'm so full");                                                   <<---
    }
}

23. Read Data from Views

<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context=".MainActivity">

    <TextView
        android:id="@+id/menu_item_1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Mango sorbet"
        android:textAppearance="?android:textAppearanceMedium" />

    <TextView
        android:id="@+id/menu_item_2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="8dp"
        android:text="Blueberry pie"
        android:textAppearance="?android:textAppearanceMedium"
        android:textSize="18sp" />

    <TextView
        android:id="@+id/menu_item_3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="8dp"
        android:text="Chocolate lava cake"
        android:textAppearance="?android:textAppearanceMedium"
        android:textSize="18sp" />

    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="8dp"
        android:onClick="printToLogs"
        android:text="Print menu to logs" />
</LinearLayout>

package com.example.android.menu;

import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.View;
import android.widget.TextView;


public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }

    public void printToLogs(View view) {
        // Find first menu item TextView and print the text to the logs
        TextView textViewItem1 = (TextView) findViewById(R.id.menu_item_1);
        String menuItem1 = textViewItem1.getText().toString();
        Log.v("MainActivity", menuItem1);
        // Find second menu item TextView and print the text to the logs
        TextView textViewItem2 = (TextView) findViewById(R.id.menu_item_2);
        String menuItem2 = textViewItem2.getText().toString();
        Log.v("MainActivity", menuItem2);

        // Find third menu item TextView and print the text to the logs
        TextView textViewItem3 = (TextView) findViewById(R.id.menu_item_3);
        String menuItem3 = textViewItem3.getText().toString();
        Log.v("MainActivity", menuItem3);

    }
}